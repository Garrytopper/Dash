<?php

namespace Dash\PortefeuilleBundle\Repository;
use doctrine\ORM\QueryBuilder;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends \Doctrine\ORM\EntityRepository
{
    /* emplacement de mes requÃªtes repository */
    public function DecRetRel(QUERYBUILDER $qb)
    {
        $qb->andWhere('c.etat = :rel OR c.etat = :ret OR c.etat = :dec')
            ->setParameter('rel', 'Relance')
            ->setParameter('ret', 'Retour')
            ->setParameter('dec', 'Decouverte')
            ;
    }


    public function CA($portefeuille)
    {
        $ca = 0;
        foreach ($portefeuille as $client) {
            $budget = $client->getBudget();
            $ca = $ca + $budget;
        }
        return $ca;
    }

    public function today(QUERYBUILDER $qb)
    {
        $qb->andWhere('c.dateRdv = :today')
            ->setParameter('today', new \Datetime('today'))
            ;
    }

    public function rdvPendantLeMoisEnCours(QUERYBUILDER $qb)
    {
        $qb ->andWhere('c.dateRdv BETWEEN :start AND :end')
           ->setParameter('start', new \Datetime(date('Y-M').'-01'))
            ->setParameter('end', new \Datetime(date('Y-M').'-01 + 1 month - 1 day'))
            ;
    }

    public function cloturePendantLeMoisEnCours(QUERYBUILDER $qb)
    {
        $qb->andWhere('c.dateCloture BETWEEN :start AND :end')
            ->setParameter('start', new \Datetime(date('Y-M').'-01'))
            ->setParameter('end', new \Datetime(date('Y-M').'-31'))
            ;
    }

    public function creationPendantLeMoisEnCours(QUERYBUILDER $qb)
    {
        $qb->andWhere('c.dateCreation BETWEEN :start AND :end')
            ->setParameter('start', new \Datetime(date('Y-M').'-01'))
            ->setParameter('end', new \Datetime(date('Y-M').'-31'))
            ->andWhere('c.DossierOuvert = :etat')
            ->setParameter('etat', true)
            ;
    }

    /*******************/

    public function todayRdv()
    {
        $qb = $this->createQueryBuilder('c');
        $this->today($qb);
        $this->DecRetRel($qb);
        return $qb->getQuery()->getResult();

    }

    public function pastCustomer()
    {
        $qb = $this->createQueryBuilder('c');
        $qb->where('c.dateRdv <= :hier')
            ->setParameter('hier', new \Datetime('now -1 day'))
            ->orderBy('c.dateRdv', 'asc')
            ;
        $this->DecRetRel($qb);
        return $qb->getQuery()->getResult();
    }

    public function myFindall()
    {
        $qb = $this->createQueryBuilder('c');
        $qb ->Where('c.dateRdv > :today')
            ->setParameter('today', new \Datetime('now'))
            ->OrderBy('c.dateRdv', 'asc')
        ;
        $this->DecRetRel($qb);
        return $qb->getQuery()->getResult();
    }

    public function thisMonth()
    {
        $qb = $this->createQueryBuilder('c');
        $this->rdvPendantLeMoisEnCours($qb);
        return  $qb->getQuery()->getResult();
    }

    public function venteDuMois()
    {
        $qb = $this->createQueryBuilder('c');
        $qb -> Where('c.etat = :etat')
            ->setParameter('etat', 'Vendu');
        $this->cloturePendantLeMoisEnCours($qb);
        return $qb->getQuery()->getResult();
    }

    public function perduDuMois()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Perdu');
        $this->cloturePendantLeMoisEnCours($qb);
        return $qb->getQuery()->getResult();
    }

    public function ouvertureDuMois()
    {
        $qb = $this->createQueryBuilder('c');
        $this->creationPendantLeMoisEnCours($qb);            
        return $qb->getQuery()->getResult();
    }

    public function retourDuMois()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Retour');
        $this->rdvPendantLeMoisEnCours($qb);
        return $qb->getQuery()->getResult();
    }

    public function decouverteDuMois()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Decouverte');
        $this->rdvPendantLeMoisEnCours($qb);
        return $qb->getQuery()->getResult();
    }

    public function relanceDuMois()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Relance');
        $this->rdvPendantLeMoisEnCours($qb);
        return $qb->getQuery()->getResult();
    }

    public function retourToday()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Retour');
        $this->today($qb);
        return $qb->getQuery()->getResult();
    }

    public function decouverteToday()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Decouverte')
                    ;
        $this->today($qb);
        return $qb->getQuery()->getResult();
    }

    public function relanceToday()
    {
        $qb = $this->createQueryBuilder('c')
                    ->Where('c.etat = :etat')
                    ->setParameter('etat', 'Relance')
                    ;
        $this->today($qb);
        return $qb->getQuery()->getResult();
    }

}
